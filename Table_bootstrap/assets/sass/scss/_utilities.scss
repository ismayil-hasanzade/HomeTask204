/*

margin           m-0 m-1 m-2 m-3 m-4 m-5 m-auto
margin-top       mt-0 mt-1 mt-2 mt-3 mt-4 mt-5 mt-auto
margin-right     mr-0 mr-1 mr-2 mr-3 mr-4 mr-5 mr-auto
margin-bottom    mb-0 mb-1 mb-2 mb-3 mb-4 mb-5 mb-auto
margin-left      ml-0 ml-1 ml-2 ml-3 ml-4 ml-5 ml-auto



padding          p-0 p-1 p-2 p-3 p-4 p-5
padding-top      pt-0 pt-1 pt-2 pt-3 pt-4 pt-5
padding-right    pr-0 pr-1 pr-2 pr-3 pr-4 pr-5
padding-bottom   pb-0 pb-1 pb-2 pb-3 pb-4 pb-5
padding-left     pl-0 pl-1 pl-2 pl-3 pl-4 pl-5

margin ve padding bitecek

opacity eklenecek  prefix -> o
10 - 100(dahil)

o-10   -> 0.1
0-20   -> 0.2


o-100   -> 1
*/

@use "sass:math";
$utilities: (
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8,
    ),
  ),
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),

  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "md": $base-border-radius * 2,
      "lg": $base-border-radius * 4,
      "full": 50%,
    ),
  ),
);

@each $property, $items in $utilities {
  $prefix: map-get(
    $map: $items,
    $key: "prefix",
  );
  $values: map-get(
    $map: $items,
    $key: "values",
  );

  @each $key, $value in $values {
    @if ($key == "default") {
    } @else {
      .#{$prefix}-#{$key} {
        #{$property}: $value;
      }
    }
  }
}
